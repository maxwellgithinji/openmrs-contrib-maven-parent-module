name: Publish package to GitHub Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build-only:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build with Maven
        run: cd assets && mvn clean install

  build-and-release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} #

      - name: Verify and Deploy
        run: |
          # Verify arguments
          if [ -z "${{ env.GROUP_ID }}" ] || [ -z "${{ env.ARTIFACT_ID }}" ] || [ -z "${{ github.event.release.tag_name }}" ]; then
            echo "Usage: deployscript <group_id> <artifact_id> <version>"
            exit 1
          fi

          echo "Starting deploy script!"

          # First clean install in base folder to ensure the artifact is present
          cd assets && mvn clean install
          cd ..

          # Create new repository directory
          base_dir=$(pwd)
          target_dir=${base_dir}
          parent_dir=$(dirname "$base_dir")

          base_dir_name=${base_dir##*/}

          # setup git
          git config --global user.email "maxwellgithinji@gmail.com"
          git config --global user.name "maxwellgithinji"
          
          # Check out to new branch called repository
          echo "Setting up repository branch and installing pom..."
          pom_location=${target_dir}/assets/pom.xml
          git checkout -B main
          mvn install:install-file -DgroupId=${{ env.GROUP_ID }} -DartifactId=${{ env.ARTIFACT_ID }} -Dversion=${{ github.event.release.tag_name }} -Dfile=${pom_location} -Dpackaging=pom -DgeneratePom=true -DlocalRepositoryPath=. -DcreateChecksum=true

          # Commit and push
          echo "Committing and pushing to repository branch..."
          git add -A .
          git commit -m "Release version ${{ github.event.release.tag_name }}"
          git push origin main --force

          echo "Done!"

        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          BUILD_ENV: 'github-actions'
          MVN_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GROUP_ID: ${{ secrets.GROUP_ID }}
          ARTIFACT_ID: ${{ secrets.ARTIFACT_ID }}
